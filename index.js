import{S as d,i as u,a as p}from"./assets/vendor-f37SKNYf.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function i(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(e){if(e.ep)return;e.ep=!0;const t=i(e);fetch(e.href,t)}})();async function f(){try{const{data:r}=await p.get("https://portfolio-js.b.goit.study/api/reviews");return r}catch(r){console.error("Error: ",r)}}function w(r){return r.map(({_id:o,author:i,avatar_url:s,review:e})=>`
		<li class="swiper-slide review-card">
		  <img src="${s}" alt="${i}"/>
			<div class="review-info">
			  <h4>${i}</h4>
				<p>${e}</p>
			</div>
		</li>
		`).join("")}const v=document.querySelector(".reviews-container"),m=document.querySelector(".reviews-list"),l=document.querySelector(".reviews-error"),b=document.querySelector(".swiper-button-prev"),a=document.querySelector(".swiper-button-next");let c=!1;document.addEventListener("DOMContentLoaded",async()=>{try{let i=function(){b.toggleAttribute("disabled",o.isBeginning),a.toggleAttribute("disabled",o.isEnd)};const r=await f();if(!r||r.length===0){l.classList.remove("hidden"),l.classList.add("css-err-mes"),a.setAttribute("disabled","true"),c=!0;return}m.innerHTML=w(r);const o=new d(".swiper",{direction:"horizontal",loop:!1,spaceBetween:16,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:{invert:!0},resizeObserver:!0,slidesPerView:1,breakpoints:{768:{slidesPerView:2},1440:{slidesPerView:4}}});o.on("slideChange",i),i()}catch(r){c=!0,console.error(r)}});const g=new IntersectionObserver(r=>{r.forEach(o=>{c&&o.isIntersecting&&u.error({title:"Error",message:"No feedback data about reviews. We are solving the problem",position:"topRight"})})},{threshold:.2});g.observe(v);
//# sourceMappingURL=index.js.map
